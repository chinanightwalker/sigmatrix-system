<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd ">
			
	<bean id="publicConfigurer"
		class="com.sigmatrix.sc.global.init.InitPublicPropertyConfigure">
		<property name="initPropertiesFile">
			<list>
				<value>classpath:conf/resources.properties</value>
			</list>
		</property>
	</bean>
	<context:component-scan base-package="com.sigmatrix.sc.service" />
	<context:component-scan base-package="com.sigmatrix.sc.dao.cloud" />
	<bean id="dynamodbutil" class="com.sigmatrix.sc.utils.AmazonUtil">
		<property name="amazonDynamoDBEndpoint" value="http://dynamodb-dev.hnyjpj.2c0.cn:9800/"></property>
		<property name="amazonAWSAccessKey" value="${amazon.aws.accesskey}"></property>
		<property name="amazonAWSSecretKey" value="${amazon.aws.secretkey}"></property>
		<property name="amazonS3Bucket" value="${amazon.s3.bucket}"></property>
		<property name="region" value="local"></property>
	</bean>
	<bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${db.url}${db.dataname}${db.charcode}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<property name="initialSize" value="${druid.initialSize}"/>
        <property name="minIdle" value="${druid.minIdle}"/>
        <property name="maxActive" value="${druid.maxActive}"/>
        <property name="maxWait" value="${druid.maxWait}"/>
        <property name="removeAbandoned" value="${druid.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="${druid.logAbandoned}" />
        <property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />
        <property name="validationQuery" value="${druid.validationQuery}" />
        <property name="testWhileIdle" value="${druid.testWhileIdle}" />
        <property name="testOnBorrow" value="${druid.testOnBorrow}" />
        <property name="testOnReturn" value="${druid.testOnReturn}" />
        <property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />
        <property name="filters" value="${druid.filters}" />
	</bean>

	

	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
		<property name="mapperLocations"
			value="classpath:/com/sigmatrix/sc/dao/mapper/v1/**/*.xml"></property>
		<property name="typeAliasesPackage" value="com.sigmatrix.sc.entity.v1" />
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" />  
	</bean>
	
	

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sigmatrix.sc.dao.mapper.v1" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory1"></property>
	</bean>
	

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager1"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource1" />
	</bean>
	

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager1">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />

			<!-- <tx:method name="get*" propagation="SUPPORTS" read-only="true" /> 
				<tx:method name="select*" propagation="SUPPORTS" read-only="true" /> <tx:method 
				name="find*" propagation="SUPPORTS" read-only="true" /> <tx:method name="load*" 
				propagation="SUPPORTS" read-only="true" /> <tx:method name="search*" propagation="SUPPORTS" 
				read-only="true" /> <tx:method name="datagrid*" propagation="SUPPORTS" read-only="true" 
				/> -->

			<!-- <tx:method name="*" read-only="true" /> -->
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 配置参与事务的类 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="allTestServiceMethod"
			expression="execution(* com.sigmatrix.sc.service.*.*(..))" />
		<aop:advisor pointcut-ref="allTestServiceMethod"
			advice-ref="transactionAdvice" />
	</aop:config>
	<!-- 服务器启动时自动加载，目前主要提取加载需要缓存的公众号信息 -->
        <bean id="appServiceImpl" class="com.sigmatrix.sc.service.impl.AppDefineInitServiceImpl">
        	<property name="userCenterBaseUrl" value="${usercenter.base.domian}"></property>
        </bean>
        <bean id="beanDefineConfigue" class="com.sigmatrix.sc.web.servlets.SpringBeanDefineConfigue">
        	<property name="appService" ref="appServiceImpl"></property>
        </bean>
        <import resource="classpath:conf/spring-shiro.xml"/>
</beans>  