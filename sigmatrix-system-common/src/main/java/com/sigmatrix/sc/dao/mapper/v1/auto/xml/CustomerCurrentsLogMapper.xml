<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sigmatrix.sc.dao.mapper.v1.auto.CustomerCurrentsLogMapper" >
  <resultMap id="BaseResultMap" type="com.sigmatrix.sc.entity.v1.CustomerCurrentsLog" >
    <id column="_id" property="id" jdbcType="VARCHAR" />
    <result column="_customer_id" property="customerId" jdbcType="VARCHAR" />
    <result column="_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="_currentnum" property="currentnum" jdbcType="INTEGER" />
    <result column="_integral_type" property="integralType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    _id, _customer_id, _create_time, _currentnum, _integral_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sigmatrix.sc.entity.v1.CustomerCurrentsLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ${tablePrefix}_customer_currents_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from ${tablePrefix}_customer_currents_log
    where _id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from ${tablePrefix}_customer_currents_log
    where _id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sigmatrix.sc.entity.v1.CustomerCurrentsLogExample" >
    delete from ${tablePrefix}_customer_currents_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sigmatrix.sc.entity.v1.CustomerCurrentsLog" >
    insert into ${tablePrefix}_customer_currents_log (_id, _customer_id, _create_time, 
      _currentnum, _integral_type)
    values (#{id,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{currentnum,jdbcType=INTEGER}, #{integralType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sigmatrix.sc.entity.v1.CustomerCurrentsLog" >
    insert into ${tablePrefix}_customer_currents_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        _id,
      </if>
      <if test="customerId != null" >
        _customer_id,
      </if>
      <if test="createTime != null" >
        _create_time,
      </if>
      <if test="currentnum != null" >
        _currentnum,
      </if>
      <if test="integralType != null" >
        _integral_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentnum != null" >
        #{currentnum,jdbcType=INTEGER},
      </if>
      <if test="integralType != null" >
        #{integralType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sigmatrix.sc.entity.v1.CustomerCurrentsLogExample" resultType="java.lang.Integer" >
    select count(*) from ${tablePrefix}_customer_currents_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ${record.tablePrefix}_customer_currents_log
    <set >
      <if test="record.id != null" >
        _id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null" >
        _customer_id = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        _create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currentnum != null" >
        _currentnum = #{record.currentnum,jdbcType=INTEGER},
      </if>
      <if test="record.integralType != null" >
        _integral_type = #{record.integralType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ${record.tablePrefix}_customer_currents_log
    set _id = #{record.id,jdbcType=VARCHAR},
      _customer_id = #{record.customerId,jdbcType=VARCHAR},
      _create_time = #{record.createTime,jdbcType=TIMESTAMP},
      _currentnum = #{record.currentnum,jdbcType=INTEGER},
      _integral_type = #{record.integralType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sigmatrix.sc.entity.v1.CustomerCurrentsLog" >
    update ${tablePrefix}_customer_currents_log
    <set >
      <if test="customerId != null" >
        _customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        _create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currentnum != null" >
        _currentnum = #{currentnum,jdbcType=INTEGER},
      </if>
      <if test="integralType != null" >
        _integral_type = #{integralType,jdbcType=INTEGER},
      </if>
    </set>
    where _id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sigmatrix.sc.entity.v1.CustomerCurrentsLog" >
    update ${tablePrefix}_customer_currents_log
    set _customer_id = #{customerId,jdbcType=VARCHAR},
      _create_time = #{createTime,jdbcType=TIMESTAMP},
      _currentnum = #{currentnum,jdbcType=INTEGER},
      _integral_type = #{integralType,jdbcType=INTEGER}
    where _id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>
